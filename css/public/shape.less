/*
 * Shape.less v1.0 
 * Author:iRuxu
 * Creat:2014.8
 * Update:2015.6.10
 * https://github.com/iRuxu/LessLab
 */


/*Effect
--------------------------------------------------------------*/
	//Reflect 倒影 (just webkit)
    .dy(t){-webkit-box-reflect: above;}
    .dy(b){-webkit-box-reflect: below;}
    .dy(l){-webkit-box-reflect: left;}
    .dy(r){-webkit-box-reflect: right;}

/*Single Arrow
--------------------------------------------------------------*/
	//添加arrow的元素需要自行设置非静态定位属性！
    //使用伪对象创建arrow,after为上浮层,before为边框层
    .arrow(t,@width,@color,@x:50%){
        &:before{
            bottom: 100%;
            left: @x;         
            content: " ";
            height: 0;
            width: 0;
            position: absolute;
            pointer-events: none;
            border-style: solid;
            border-color: transparent;
            border-bottom-color:@color;
            border-width: unit(@width,px);
            @margin:-@width;
            margin-left: unit(@margin,px);
        }
    }


    .arrow(b,@width,@color,@x:50%){
        &:before{
            top: 100%;
            left: @x;
            content: " ";
            height: 0;
            width: 0;
            position: absolute;
            pointer-events: none;
            border-style: solid;
            border-color: transparent;
            border-top-color:@color;
            border-width: unit(@width,px);
            @margin:-@width;
            margin-left: unit(@margin,px);
        }
    }

    .arrow(l,@width,@color,@y:50%){
        &:before{
            right: 100%;
            top: @y;
            content: " ";
            height: 0;
            width: 0;
            position: absolute;
            pointer-events: none;
            border-style: solid;
            border-color: transparent;
            border-right-color:@color;
            border-width: unit(@width,px);
            @margin:-@width;
            margin-top: unit(@margin,px);
        }
    }


    .arrow(r,@width,@color,@y:50%){
        &:before{
            left: 100%;
            top: @y;
            content: " ";
            height: 0;
            width: 0;
            position: absolute;
            pointer-events: none;
            border-style: solid;
            border-color: transparent;
            border-left-color:@color;
            border-width: unit(@width,px);
            @margin:-@width;
            margin-top: unit(@margin,px);
        }
    }

/*Border Arrow
--------------------------------------------------------------*/
    .arrows(t,@width,@color,@bo-width,@bo-color,@x:50%){
        &:before,&:after{
            bottom: 100%;
            left: @x;
            content: " ";
            height: 0;
            width: 0;
            position: absolute;
            pointer-events: none;
            border-style: solid;
            border-color: transparent; 
        }
        &:after{
            border-bottom-color:@color;
            border-width: unit(@width,px);
            @margin:-@width;
            margin-left: unit(@margin,px);
        }
        &:before{
            border-bottom-color:@bo-color;
            @arrbo:@width+@bo-width;
            border-width: unit(@arrbo,px);
            @margin-bo:-@arrbo;
            margin-left: unit(@margin-bo,px);
        }
    }

    .arrows(b,@width,@color,@bo-width,@bo-color,@x:50%){
        &:before,&:after{
            top: 100%;
            left: @x;
            content: " ";
            height: 0;
            width: 0;
            position: absolute;
            pointer-events: none;
            border-style: solid;
            border-color: transparent; 
        }
        &:after{
            border-top-color:@color;
            border-width: unit(@width,px);
            @margin:-@width;
            margin-left: unit(@margin,px);
        }
        &:before{
            border-top-color:@bo-color;
            @arrbo:@width+@bo-width;
            border-width: unit(@arrbo,px);
            @margin-bo:-@arrbo;
            margin-left: unit(@margin-bo,px);
        }
    }

    .arrows(l,@width,@color,@bo-width,@bo-color,@y:50%){
        &:before,&:after{
            top: @y;
            right: 100%;
            content: " ";
            height: 0;
            width: 0;
            position: absolute;
            pointer-events: none;
            border-style: solid;
            border-color: transparent; 
        }
        &:after{
            border-right-color:@color;
            border-width: unit(@width,px);
            @margin:-@width;
            margin-top: unit(@margin,px);
        }
        &:before{
            border-right-color:@bo-color;
            @arrbo:@width+@bo-width;
            border-width: unit(@arrbo,px);
            @margin-bo:-@arrbo;
            margin-top: unit(@margin-bo,px);
        }
    }

    .arrows(r,@width,@color,@bo-width,@bo-color,@y:50%){
        &:before,&:after{
            top: @y;
            left: 100%;
            content: " ";
            height: 0;
            width: 0;
            position: absolute;
            pointer-events: none;
            border-style: solid;
            border-color: transparent; 
        }
        &:after{
            border-left-color:@color;
            border-width: unit(@width,px);
            @margin:-@width;
            margin-top: unit(@margin,px);
        }
        &:before{
            border-left-color:@bo-color;
            @arrbo:@width+@bo-width;
            border-width: unit(@arrbo,px);
            @margin-bo:-@arrbo;
            margin-top: unit(@margin-bo,px);
        }
    }

/*Triangle
--------------------------------------------------------------*/
    //创建三角形
    //需要独立设置可参考 http://apps.eky.hk/css-triangle-generator/zh-hant
    .tg(...){
        width: 0;
        height: 0;
        _line-height: 0px;
        _filter: ~"progid:DXImageTransform.Microsoft.Chroma(color='#000000')";
        _border-color: #000000;
    }

    .tg(t,@width,@color,@equilateral:0){
        @sidewidth: unit(@width) * ( 1+( tan(60deg)-1 )*@equilateral);
        border: unit(@width,px) solid transparent;
        border-bottom: unit(@sidewidth,px) solid @color;
    }

    .tg(b,@width,@color,@equilateral:0){
        @sidewidth:  unit(@width) * ( 1+( tan(60deg)-1 )*@equilateral );
        border: unit(@width,px) solid transparent;
        border-top: unit(@sidewidth,px) solid @color;
    }

    .tg(l,@width,@color,@equilateral:0){
        @sidewidth:  unit(@width) * ( 1+( tan(60deg)-1 )*@equilateral );
        border: unit(@width,px) solid transparent;
        border-right: unit(@sidewidth,px) solid @color;
    }

    .tg(r,@width,@color,@equilateral:0){
        @sidewidth:  unit(@width) * ( 1+( tan(60deg)-1 )*@equilateral );
        border: unit(@width,px) solid transparent;
        border-left: unit(@sidewidth,px) solid @color;
    }

    .tg(lt,@width,@color){
        border: unit(@width,px) solid transparent;
        border-top-color:@color;
        border-left-color:@color;
    }

    .tg(rt,@width,@color){
        border: unit(@width,px) solid transparent;
        border-top-color:@color;
        border-right-color:@color;
    }

    .tg(lb,@width,@color){
        border: unit(@width,px) solid transparent;
        border-bottom-color:@color;
        border-left-color:@color;
    }

    .tg(rb,@width,@color){
        border: unit(@width,px) solid transparent;
        border-bottom-color:@color;
        border-right-color:@color;
    }

/*Radius 
--------------------------------------------------------------*/
//圆·Disc
    //圆角等于高度/宽度的一半，半圆宽度/高度等于另外的一半，设置侧边圆角
    .disc(o,@r,@color){
        width:unit(@r,px);
        height:unit(@r,px);
        @radius:@r/2;
        border-radius:unit(@radius,px);
        background-color:@color;
    }

    .disc(l,@r,@color){
        width:unit(@r/2,px);
        height:unit(@r,px);
        @radius:unit(@r/2,px);
        border-top-left-radius:@radius;
        border-bottom-left-radius:@radius;
        background-color:@color;
    }

    .disc(r,@r,@color){
        width:unit(@r/2,px);
        height:unit(@r,px);
        @radius:unit(@r/2,px);
        border-top-right-radius:@radius;
        border-bottom-right-radius:@radius;
        background-color:@color;
    }

    .disc(t,@r,@color){
        width:unit(@r,px);
        height:unit(@r/2,px);
        @radius:unit(@r/2,px);
        border-top-left-radius:@radius;
        border-top-right-radius:@radius;
        background-color:@color;
    }

    .disc(b,@r,@color){
        width:unit(@r,px);
        height:unit(@r/2,px);
        @radius:unit(@r/2,px);
        border-bottom-left-radius:@radius;
        border-bottom-right-radius:@radius;
        background-color:@color;
    }

//圈·Circle
    .circle(o,@r,@border){
        width:unit(@r,px);
        height:unit(@r,px);
        @radius:@r/2;
        border-radius:unit(@radius,px);
        border:@border;
    }

    .circle(l,@r,@border){
        width:unit(@r/2,px);
        height:unit(@r,px);
        @radius:unit(@r/2,px);
        border-top-left-radius:@radius;
        border-bottom-left-radius:@radius;
        border:@border;
    }

    .circle(r,@r,@border){
        width:unit(@r/2,px);
        height:unit(@r,px);
        @radius:unit(@r/2,px);
        border-top-right-radius:@radius;
        border-bottom-right-radius:@radius;
        border:@border;
    }

    .circle(t,@r,@border){
        width:unit(@r,px);
        height:unit(@r/2,px);
        @radius:unit(@r/2,px);
        border-top-left-radius:@radius;
        border-top-right-radius:@radius;
        border:@border;
    }

    .circle(b,@r,@border){
        width:unit(@r,px);
        height:unit(@r/2,px);
        @radius:unit(@r/2,px);
        border-bottom-left-radius:@radius;
        border-bottom-right-radius:@radius;
        border:@border;
    }

//饼·Pie
    //宽高一致，且只设置1个角度的圆角，设满
    .pie(lt,@r,@color){
        width:unit(@r,px);
        height:unit(@r,px);
        @radius:unit(@r,px);
        border-top-left-radius:@radius;
        background-color:@color;
    }

    .pie(rt,@r,@color){
        width:unit(@r,px);
        height:unit(@r,px);
        @radius:unit(@r,px);
        border-top-right-radius:@radius;
        background-color:@color;
    }

    .pie(lb,@r,@color){
        width:unit(@r,px);
        height:unit(@r,px);
        @radius:unit(@r,px);
        border-bottom-left-radius:@radius;
        background-color:@color;
    }

    .pie(rb,@r,@color){
        width:unit(@r,px);
        height:unit(@r,px);
        @radius:unit(@r,px);
        border-bottom-right-radius:@radius;
        background-color:@color;
    }

//叶·Leaf
    .leaf(l,@r,@color){
        width:unit(@r,px);
        height:unit(@r,px);
        @radius:unit(@r,px);
        border-top-left-radius:@radius;
        border-bottom-right-radius:@radius;
        background-color:@color;
    }

    .leaf(r,@r,@color){
        width:unit(@r,px);
        height:unit(@r,px);
        @radius:unit(@r,px);
        border-top-right-radius:@radius;
        border-bottom-left-radius:@radius;
        background-color:@color;
    }

    .leaf(lr,@r,@color){
        width:unit(@r,px);
        height:unit(@r/2,px);
        @radius:unit(@r,px);
        border-top-left-radius:@radius;
        border-bottom-right-radius:@radius;
        background-color:@color;
    }

    .leaf(rl,@r,@color){
        width:unit(@r,px);
        height:unit(@r/2,px);
        @radius:unit(@r,px);
        border-top-right-radius:@radius;
        border-bottom-left-radius:@radius;
        background-color:@color;
    }

/*More tools
--------------------------------------------------------------
Boreder Image    http://iruxu.com/to-be-css/borderimage/index.htm
Drop shadow      http://css3-drop-shadows.herokuapp.com/app
Long shadows     http://iruxu.com/to-be-css/shadow_longshadows.html
3D text          http://www.3dcsstext.com/
--------------------------------------------------------------*/
